@import "normalize.css";
@import "variables.css";

@view-transition {
	navigation: auto;
}

@keyframes move-out {
	from {
		transform: translateX(0%);
	}

	to {
		transform: translateX(-100%);
	}
}

@keyframes move-in {
	from {
		transform: translateX(100%);
	}

	to {
		transform: translateX(0%);
	}
}

/* Apply the custom animation to the old and new page states */

::view-transition-old(root) {
	animation: 0.4s ease-in both move-out;
}

::view-transition-new(root) {
	animation: 0.4s ease-in both move-in;
}

body::before,
body::after {
	height: 100%;
	inset: 0;
	position: fixed;
	width: 100%;
	color: var(--color-text);
	content: "";
	display: block;
	isolation: isolate;
	z-index: -1;

	--s: 100px; /* control the size*/
	--c1: #999;
	--c2: var(--color-background);
	display: block;

	--_g: #9990 90deg, var(--c1) 0;
	background: conic-gradient(from 90deg at 2px 2px, var(--_g)),
		conic-gradient(from 90deg at 1px 1px, var(--_g)), var(--c2);
	background-size: var(--s) var(--s), calc(var(--s) / 5) calc(var(--s) / 5);
	background-attachment: fixed;
}

body::after {
	background: radial-gradient(
		oklch(from var(--color-background) l c h / 0.8),
		oklch(from var(--color-background) l c h / 0.95)
	);
}

body {
	background-color: var(--color-background);
	color: var(--color-text);
	font-family: var(--font-family-primary);
	font-size: var(--font-size-md);
	text-align: center;
}

section {
	min-height: 100dvh;
	width: 100dvw;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	flex: 0 0 100vw;
	scroll-snap-align: start;
}

pre {
	text-align: left;
	overflow-x: auto;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.fragment {
	opacity: 0;
	animation: fadeIn 1s ease-out forwards;
	animation-timeline: scroll(root);
	animation-range: calc((var(--fragment-count) - 1) * 100vh)
		calc(var(--fragment-count) * 100vh);
}

@media (prefers-reduced-motion: reduce) {
	.fragment {
		animation: none;
		opacity: 1;
	}
}

main {
	height: 100vh;
	overflow: auto;
	position: fixed;
	top: 0;
	width: 100%;
}

body {
	height: calc(100vh * (1 + var(--fragment-count, 0)));
}

:root {
	--fragment-count: 0;
}

a {
	color: var(--color-primary);

	&:hover {
		color: var(--color-accent);
	}

	&:focus,
	&:focus-visible {
		color: var(--color-accent);
		outline: solid;
		outline-offset: 4px;
		outline-color: var(--color-accent);
		text-decoration: none;
	}
}

body:has(:nth-child(1 of .fragment)) {
	--fragment-count: 1;
}
body:has(:nth-child(2 of .fragment)) {
	--fragment-count: 2;
}
body:has(:nth-child(3 of .fragment)) {
	--fragment-count: 3;
}
body:has(:nth-child(4 of .fragment)) {
	--fragment-count: 4;
}
body:has(:nth-child(5 of .fragment)) {
	--fragment-count: 5;
}

:nth-child(1 of .fragment) {
	--fragment-count: 1;
}
:nth-child(2 of .fragment) {
	--fragment-count: 2;
}
:nth-child(3 of .fragment) {
	--fragment-count: 3;
}
:nth-child(4 of .fragment) {
	--fragment-count: 4;
}
:nth-child(5 of .fragment) {
	--fragment-count: 5;
}
